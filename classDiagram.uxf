<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>12</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>588</y>
      <w>132</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>Object
--

- color : glm::vec3

- mScale : glm::mat4
- mRotation : glm::mat4
- mTranslation : glm::mat4
- mModel : glm::mat4

--

/+ Object(glm::vec3 position, glm::vec3 orientation, glm::vec3 scale, glm::vec3 color)/

+ addPosition(glm::vec3 pos) : void
+ setPosition(glm::vec3 pos) : void

+ addOrientation(glm::vec3 ori) : void
+ setOrientation(glm::vec3 ori) : void

+ addScale(glm::vec3 scale) : void
+ setScale(glm::vec3 scale) : void
+ setScale(float scale) : void

+ setColor(float r, float g, float b) : void


- model() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>312</y>
      <w>156</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>ObjectHandler
--

- objects : std::vector&lt;Object*&gt;

- program : glShader
- programDepth : glShader

- vao : GLuint
- ebo : GLuint

- fbo : GLuint
- depthMap : GLuint

--

/+ ObjectHandler(const char* vertexPath, const char* elementPath)/
/+ ObjectHandler(const char* vertexPath)/

+ createObject(glm::vec3 position, glm::vec3 orientation, glm::vec3 scale, glm::vec3 color) : Object* 


+ draw() : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>624</x>
      <y>564</y>
      <w>156</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>glShader
--


--

/+ ObjectHandler(const char* vertexPath, const char* elementPath)/
/+ ObjectHandler(const char* vertexPath)/
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
