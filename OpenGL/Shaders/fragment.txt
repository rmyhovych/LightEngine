#version 330 core

in vec3 Normal;
in vec3 FragPos;

out vec4 FragColor;

uniform vec3 uColor;
uniform vec3 uLightColor;
uniform vec3 uLightPos;
uniform vec3 uViewPos;

void main()
{
	vec3 lightDir = normalize(uLightPos - FragPos);

	float ambient = 0.1;
	float diffuse = 0.7 * max(dot(Normal, lightDir), 0.0);
	float specular = 1.0 * pow(max(dot(normalize(uViewPos - FragPos), reflect(-lightDir, Normal)), 0.0), 32);

	vec3 result = (ambient + diffuse + specular) * uLightColor * uColor;
	FragColor = vec4(result, 1.0f);
}